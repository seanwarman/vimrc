#!/bin/bash

ag="ag --ignore tags --vimgrep --nomultiline"

tags=$($ag "^[ \t]*(export)?[ \t]*((exports.|const|var|function|async function|class|interface|type|let|function*)|(default))[ \t]*$1[ \(]" . | sed "s/^/$1:/g" | awk -F: '{ OFS="	"; line = "/^" $5 "/;\""; append = "C"; print $1, $2, line, append }')

if [[ ${#tags} -lt 1 ]]; then
  echo 'None trying modules...'
  tags=$($ag "^[ \t]*(export)?[ \t]*((exports.|const|var|function|async function|class|interface|type|let|function*)|(default))[ \t]*$1[ \(]" node_modules | sed "s/^/$1:/g" | awk -F: '{ OFS="	"; line = "/^" $5 "/;\""; append = "C"; print $1, $2, line, append }')
fi


# Custom matches...

# Variable definitions...
if [[ ${#tags} -lt 1 ]]; then
  tags=$($ag -Q "^[ \t]*(const|var|let|class) $1 =" . | sed "s/^/$1:/g" | awk -F: '{ OFS="	"; line = "/^" $5 "/;\""; append = "C"; print $1, $2, line, append }')
fi

# Object property definitions...
if [[ ${#tags} -lt 1 ]]; then
  tags=$($ag -Q "^[ \t]*$1:" . | sed "s/^/$1:/g" | awk -F: '{ OFS="	"; line = "/^" $5 "/;\""; append = "C"; print $1, $2, line, append }')
fi

# Cypress commands...
if [[ ${#tags} -lt 1 ]]; then
  tags=$($ag -Q "Cypress.Commands.add('$1'" . | sed "s/^/$1:/g" | awk -F: '{ OFS="	"; line = "/^" $5 "/;\""; append = "C"; print $1, $2, line, append }')
fi


# Remove any existing matches (this is the mac version)...
# sed -i "" "/$1/d" $HOME/.vim/tags
# Update the tags file...
echo "$tags" > $HOME/.vim/tags
sort -o $HOME/.vim/tags $HOME/.vim/tags
sed -i "" "/^$/d" $HOME/.vim/tags
